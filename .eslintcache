[{"C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\index.js":"1","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\App.js":"3","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Data.js":"4","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Nav.js":"5","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OSM.jsx":"6","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OLMapFragment.jsx":"7","C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\index.js":"8","C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\App.js":"9","C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\reportWebVitals.js":"10","C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Data.js":"11","C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Nav.js":"12","C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OLMapFragment.jsx":"13","C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OSM.jsx":"14"},{"size":663,"mtime":1612082053724,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":406,"mtime":1612036774698,"results":"18","hashOfConfig":"16"},{"size":8372,"mtime":1612894788954,"results":"19","hashOfConfig":"16"},{"size":1243,"mtime":1609606697245,"results":"20","hashOfConfig":"16"},{"size":6221,"mtime":1613760939131,"results":"21","hashOfConfig":"16"},{"size":5378,"mtime":1612115530308,"results":"22","hashOfConfig":"16"},{"size":663,"mtime":1612082053724,"results":"23","hashOfConfig":"24"},{"size":406,"mtime":1612036774698,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":10845,"mtime":1615830988121,"results":"27","hashOfConfig":"24"},{"size":1243,"mtime":1609606697245,"results":"28","hashOfConfig":"24"},{"size":5378,"mtime":1612115530308,"results":"29","hashOfConfig":"24"},{"size":6221,"mtime":1613760939131,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"vz69cx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"54"},"1qehj5z",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"54"},"C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\index.js",["67"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min\";\nimport {Helmet} from \"react-helmet\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["68","69"],"C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\App.js",[],"C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Data.js",["70","71","72","73"],"import React from 'react';\r\nimport axios from 'axios';\r\n// import map from './map/map.js';\r\nimport {Helmet} from \"react-helmet\";\r\nimport OLMapFragment from \"./map/OLMapFragment\";\r\nimport OSM from \"./map/OSM\";\r\n\r\nexport default class Data extends React.Component {\r\n     constructor(props){\r\n         super(props);\r\n     }\r\n\r\n    state = {\r\n        validation: [],\r\n        observation: [],\r\n        meteoParams: [],\r\n        currentObservationTime: \"select\",\r\n        currentValidationTime: \"select\",\r\n        currentMeteoParams: [],\r\n        observationSelector: \"\",\r\n        validationSelector: \"\",\r\n        meteoParamsSelector: \"\",\r\n        generalWeatherInf: {\r\n            uComponentMap: [],\r\n            vComponentMap: [],\r\n            temperatureMap: [],\r\n            cloudMap: [],\r\n            humidityMap: []\r\n        }\r\n\r\n    }\r\n\r\n     componentDidMount(){\r\n         this.validation = axios.get(\"http://localhost:8080/data/validation\")\r\n             .then(response => response.data)\r\n             .then(data => {\r\n                 this.setState({validation : data});\r\n             });\r\n         this.observation = axios.get(\"http://localhost:8080/data/observation\")\r\n             .then(response => response.data)\r\n             .then(data => {\r\n                 this.setState({observation : data});\r\n                 console.log(this.state.observation);\r\n             });\r\n         this.meteoParams = axios.get(\"http://localhost:8080/data/meteo/params\")\r\n             .then(response => response.data)\r\n             .then(data => {\r\n                 this.setState({meteoParams : data});\r\n                 console.log(this.state.meteoParams);\r\n             });\r\n\r\n         // this.header.createScriptElement(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDzxBe9nA8HDVTMXLckdw9UVpi91nhowu0&amp;v=3.exp&amp;language=ua&callback=initMap\");\r\n\r\n    }\r\n\r\n    createScriptElement(path){\r\n        const script = document.createElement(\"script\");\r\n        script.src = path;\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    selectedObservationTime(){\r\n        this.setState({currentObservationTime: this.refs.observationSelector.value});\r\n        console.log(this.refs.observationSelector.value);\r\n    }\r\n\r\n    selectedValidationTime(){\r\n        this.setState({currentValidationTime: this.refs.validationSelector.value});\r\n        console.log(this.refs.validationSelector.value);\r\n    }\r\n\r\n    selectedMeteoParams(e){\r\n        this.setState({\r\n            currentMeteoParams: Array.from(e.target.selectedOptions, item => item.value)\r\n        });\r\n    }\r\n\r\n    // clearSelectedMeteoParams(){\r\n    //     this.setState({\r\n    //         currentMeteoParams: []\r\n    //     });\r\n    // }\r\n\r\n    postWeatherTime = e => {\r\n        e.preventDefault();\r\n        // console.log('observationSelector: ', {\r\n        //     currentObservationTime: this.state.currentObservationTime,\r\n        //     currentValidationTime: this.state.currentValidationTime,\r\n        //     currentMeteoParams: this.state.currentMeteoParams}\r\n        //     )\r\n\r\n        var requestData = {\r\n            currentObservationTime: this.state.currentObservationTime,\r\n            currentValidationTime: this.state.currentValidationTime,\r\n            currentMeteoParams: this.state.currentMeteoParams\r\n        };\r\n\r\n        const requestOptions = {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(requestData)\r\n        };\r\n        // JSON.stringify(response)\r\n        fetch('http://localhost:8080/data/weather/init', requestOptions)\r\n            .then(response => response.json())\r\n            // .then(json => { generalWeatherInf: this.createGeneralWeatherInf(json) })\r\n            .then(json => { this.setState({generalWeatherInf: this.createGeneralWeatherInf(json)}) })\r\n            .then(() => { console.log('generalWeatherInf: ', this.state.generalWeatherInf) });\r\n\r\n    }\r\n\r\n    createGeneralWeatherInf(data) {\r\n        const allowed = ['uComponentMap', 'vComponentMap', 'temperatureMap', 'cloudMap', 'humidityMap'];\r\n        return Object.keys(data)\r\n            .filter(key => allowed.includes(key))\r\n            .reduce((obj, key) => {\r\n                obj[key] = data[key];\r\n                return obj;\r\n            }, {});\r\n            // .forEach(key => {\r\n            // console.log(key, json[key]) });\r\n        // console.log(filtered);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n         if(prevState.generalWeatherInf != this.state.generalWeatherInf){\r\n             console.log('componentDidUpdate: ', this.state.generalWeatherInf) ;\r\n         }\r\n    }\r\n\r\n    render(){\r\n        const{ currentObservationTime, currentValidationTime, currentMeteoParams } = this.state;\r\n        return (\r\n            <div>\r\n\r\n            <form id=\"weatherForecast-time\" onSubmit={this.postWeatherTime.bind(this)} style={{padding: \"8px\", width: \"500px\", height: \"300px\", background: \"#FF5\"}}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"observation-time\">Observation time</label>\r\n                            <select id=\"observation-time\"\r\n                                    className=\"custom-select\"\r\n                                    ref=\"observationSelector\"\r\n                                    onChange={(e)=>{this.selectedObservationTime()}}\r\n                                    value={currentObservationTime}\r\n                                    style={{ width: \"220px\"}}\r\n                                    >\r\n                                { this.state.observation.map((x,y) => <option  key={y}>{x}</option>) }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"validating-time\">Validation time</label>\r\n                            <select id=\"validating-time\"\r\n                                    className=\"custom-select\"\r\n                                    ref=\"validationSelector\"\r\n                                    onChange={(e)=>{this.selectedValidationTime()}}\r\n                                    value={currentValidationTime}\r\n                                    style={{width: \"220px\"}}\r\n                                    >\r\n                                { this.state.validation.map((x,y) => <option  key={y}>{x}</option>) }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"meteo-params\">Meteorological parameters</label>\r\n                            <select id=\"meteo-params\"\r\n                                    className=\"custom-select\"\r\n                                    ref=\"meteoParamsSelector\"\r\n                                    onChange={(e)=>this.selectedMeteoParams(e)}\r\n                                    // onMouseOver={()=>this.clearSelectedMeteoParams()}\r\n                                    value={currentMeteoParams}\r\n                                    style={{width: \"220px\"}}\r\n                                    multiple\r\n                            >\r\n                                { this.state.meteoParams.map((x,y) => <option  key={y}>{x}</option>) }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <ol>\r\n                        { currentMeteoParams.map((x,y) =>  <li key={y}> {x} </li> )}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-dark float-right\">Dark</button>\r\n            </form>\r\n\r\n                {/*<div id='react-container' ref=\"react-container\" style={{width:\"200px\", height:\"200px\"}}></div>*/}\r\n                {/*<OLMapFragment />*/}\r\n                <OSM generalWeatherInf={this.state.generalWeatherInf}></OSM>\r\n            </div>\r\n\r\n        );\r\n    };\r\n\r\n}","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Nav.js",["74","75","76","77","78","79"],"import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"bootstrap/dist/js/bootstrap.min\";\r\nimport {WiThermometer} from \"weather-icons-react\";\r\n\r\nexport default class Nav extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <ul className=\"nav\">\r\n                    <a className=\"navbar-brand\" href=\"#\"><WiThermometer size={24} color='#FFF' /></a>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href=\"#\" color='#FFF'>Active</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" color='#FFF'>Link</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" color='#FFF'>Disabled</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OSM.jsx",["80","81","82","83"],"import React from 'react';\r\nimport {Feature, Map, View} from 'ol';\r\nimport XYZ from \"ol/source/XYZ\";\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport { Style, Fill, Stroke, Text, Icon } from \"ol/style\";\r\nimport Point from \"ol/geom/Point\";\r\nimport {fromLonLat} from \"ol/proj\";\r\nimport {Vector as VectorSource} from \"ol/source\";\r\nimport image from \"./dot.png\";\r\n\r\nexport default class OSM extends React.Component {\r\n\r\n    map;\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.map = new Map();\r\n    };\r\n\r\n    putMarkers(data){\r\n        // var labelStyle = new Style({\r\n        //     text: new Text({\r\n        //         font: '12px Calibri,sans-serif',\r\n        //         overflow: true,\r\n        //         fill: new Fill({\r\n        //             color: '#000',\r\n        //         }),\r\n        //         stroke: new Stroke({\r\n        //             color: '#fff',\r\n        //             width: 3,\r\n        //         }),\r\n        //     }),\r\n        // });\r\n\r\n        var markers = [];\r\n\r\n        data.forEach(element => {\r\n            var geoMarker = new Feature({\r\n                geometry: new Point(fromLonLat([element.weatherPK.longitude, element.weatherPK.latitude]))\r\n\r\n            });\r\n            geoMarker.setStyle(new Style({\r\n                    // image: new Icon(({\r\n                    //     crossOrigin: 'anonymous',\r\n                    //     src: image,\r\n                    //     scale: [0.03, 0.03],\r\n                    // })),\r\n                text: new Text({\r\n                    font: '12px Roboto',\r\n                    text: new String(element.meteoParameter),\r\n                    fill: new Fill({\r\n                        color: '#ffbb00'\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: '#000',\r\n                        width: 1\r\n                    })\r\n                })\r\n            }));\r\n            markers.push(geoMarker);\r\n            }\r\n        )\r\n\r\n        // var geoMarker1 = new Feature({\r\n        //     // type: 'geoMarker',\r\n        //     geometry: new Point(fromLonLat([32.2858, 48.01398]))\r\n        // });\r\n        //\r\n        // var geoMarker2 = new Feature({\r\n        //     // type: 'geoMarker',\r\n        //     geometry: new Point(fromLonLat([33.2858, 47.01398]))\r\n        // });\r\n        //\r\n        // var geoMarker3 = new Feature({\r\n        //     // type: 'geoMarker',\r\n        //     geometry: new Point(fromLonLat([30.2858, 50.01398]))\r\n        // });\r\n\r\n        // geoMarker.setStyle(new Style({\r\n        //     image: new Icon(({\r\n        //         crossOrigin: 'anonymous',\r\n        //         src: image,\r\n        //         scale: [0.03, 0.03],\r\n        //     })),\r\n        //     text: new Text({\r\n        //         font: '12px Roboto',\r\n        //         text: 'AAAAAAAAAAAAAAA',\r\n        //         fill: new Fill({\r\n        //             color: '#ffbb00'\r\n        //         }),\r\n        //         stroke: new Stroke({\r\n        //             color: '#000',\r\n        //             width: 1\r\n        //         })\r\n        //     })\r\n        // }));\r\n        //\r\n        // markers.push(geoMarker1);\r\n        // markers.push(geoMarker2);\r\n        // markers.push(geoMarker3);\r\n\r\n        // var geoMarker = new Feature({\r\n        //     // type: 'geoMarker',\r\n        //     geometry: new Point(fromLonLat([31.2858, 49.01398])),\r\n        // });\r\n\r\n        // var styles = {\r\n        //     'geoMarker': new Style({\r\n        //         image: new CircleStyle({\r\n        //             radius: 7,\r\n        //             fill: new Fill({color: 'black'}),\r\n        //             stroke: new Stroke({\r\n        //                 color: 'white',\r\n        //                 width: 2,\r\n        //             }),\r\n        //         }),\r\n        //     }),\r\n        // };\r\n\r\n        // var vectorSource = new VectorSource({\r\n        //     features: [geoMarker]\r\n        // });\r\n\r\n\r\n        var vectorSource = new VectorSource({\r\n            features: markers\r\n        });\r\n\r\n        var markerVectorLayer = new VectorLayer({\r\n            source: vectorSource,\r\n            // style: styles.geoMarker,\r\n        });\r\n\r\n        // map.addLayer(markerVectorLayer);\r\n\r\n        return markerVectorLayer;\r\n    }\r\n\r\n    // createGeneralWeatherInf(data) {\r\n    //     const allowed = ['uComponentMap', 'vComponentMap', 'temperatureMap', 'cloudMap', 'humidityMap'];\r\n    //     return Object.keys(data)\r\n    //         .filter(key => allowed.includes(key))\r\n    //         .reduce((obj, key) => {\r\n    //             obj[key] = data[key];\r\n    //             return obj;\r\n    //         }, {});\r\n    //     // .forEach(key => {\r\n    //     // console.log(key, json[key]) });\r\n    //     // console.log(filtered);\r\n    // }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.generalWeatherInf != this.props.generalWeatherInf){\r\n            var parsedJson = JSON.parse(JSON.stringify(this.props.generalWeatherInf));\r\n            var markersLayer = this.putMarkers(parsedJson.temperatureMap);\r\n            this.map.addLayer(markersLayer);\r\n            // console.log('props from OSM: ', this.props.generalWeatherInf) ;\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.map.constructor(\r\n            {\r\n                target: document.getElementById('map'),\r\n                layers: [\r\n                    new TileLayer({\r\n                        source: new XYZ({\r\n                            url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n                            // projection: 'EPSG:4326',\r\n                            // tileSize: 512,\r\n                        }),\r\n                    }) ],\r\n                view: new View({\r\n                    // projection: 'EPSG:4326',\r\n                    center: fromLonLat([31.2858, 49.0139]),\r\n                    zoom: 6\r\n                }),\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    render(){\r\n        const style = {\r\n            width: '100%',\r\n            height: '400px',\r\n            backgroundColor: '#cccccc'\r\n        }\r\n        return (\r\n            <div>\r\n                <div id='map' style={style} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\tatka_000\\Documents\\IntelliJ Projects\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OLMapFragment.jsx",["84","85","86","87"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Map, View } from 'ol'\r\nimport { Tile as TileLayer } from 'ol/layer'\r\nimport { Vector as VectorSource, OSM as OSMSource, XYZ as XYZSource, TileWMS as TileWMSSource } from 'ol/source'\r\nimport { ScaleLine, ZoomSlider, MousePosition, OverviewMap, defaults as DefaultControls } from 'ol/control'\r\n\r\nclass OLMapFragment extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateDimensions = this.updateDimensions.bind(this)\r\n    }\r\n\r\n    updateDimensions(){\r\n        const h = window.innerWidth >= 992 ? window.innerHeight : 400\r\n        this.setState({height: h})\r\n    }\r\n\r\n    componentWillMount(){\r\n        window.addEventListener('resize', this.updateDimensions)\r\n        this.updateDimensions()\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        // var map = document.getElementById('map');\r\n        // var marker = document.getElementById('marker');\r\n\r\n        // Create an Openlayer Map instance with two tile layers\r\n        var map = new Map({\r\n            //  Display the map in the div with the id of map\r\n            target: 'map',\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new XYZSource({\r\n                        url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n                        projection: 'EPSG:4326'\r\n                    })\r\n                }),\r\n            //     new TileLayer({\r\n            //         source: new TileWMSSource({\r\n            //             url: 'https://ahocevar.com/geoserver/wms',\r\n            //             params: {\r\n            //                 layers: 'topp:states',\r\n            //                 'TILED': true,\r\n            //             },\r\n            //             projection: 'EPSG:4326'\r\n            //         }),\r\n            //         name: 'USA'\r\n            //     }),\r\n            ],\r\n            // Add in the following map controls\r\n            controls: DefaultControls().extend([\r\n                new ZoomSlider(),\r\n                new MousePosition(),\r\n                new ScaleLine(),\r\n                new OverviewMap()\r\n            ]),\r\n            // Render the tile layers in a map view with a Mercator projection\r\n            view: new View({\r\n                projection: 'EPSG:4326',\r\n                center: [31.2, -33.4],\r\n                zoom: 6\r\n            })\r\n        })\r\n\r\n        // var iconFeature2 = new ol.Feature({\r\n        //     geometry: new ol.geom.Point(ol.proj.fromLonLat([-0.1426069, 51.4840309])),\r\n        //     name: 'Somewhere else'\r\n        // });\r\n\r\n        // specific style for that one point\r\n        // iconFeature2.setStyle(new ol.style.Style({\r\n        //     image: new ol.style.Icon({\r\n        //         anchor: [0.5, 46],\r\n        //         anchorXUnits: 'fraction',\r\n        //         anchorYUnits: 'pixels',\r\n        //         src: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Map_marker_font_awesome.svg/200px-Map_marker_font_awesome.svg.png',\r\n        //     })\r\n\r\n        // var geoMarkerFeature = new Feature({\r\n        //     type: 'icon',\r\n        //     geometry: new Point(fromLonLat([49.0139, 31.2858], )),\r\n        // });\r\n\r\n        // geoMarkerFeature.setStyle(new Style({\r\n        //     image: new Icon({\r\n        //         anchor: [49.0139, 31.2858],\r\n        //         anchorXUnits: 'fraction',\r\n        //         anchorYUnits: 'pixels',\r\n        //         src: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Map_marker_font_awesome.svg/200px-Map_marker_font_awesome.svg.png',\r\n        //     })\r\n        // }));\r\n\r\n        // const iconLayerSource = new ol.source.Vector({\r\n        //     features: [iconFeature1, iconFeature2]\r\n        // });\r\n\r\n        // var geoMarkerLayerSource = new Vector({\r\n        //     source: new VectorSource({\r\n        //         features: [geoMarkerFeature],\r\n        //     })\r\n        // });\r\n        //\r\n        // const iconLayer = new Vector({\r\n        //     source: geoMarkerLayerSource,\r\n        //     // style for all elements on a layer\r\n        //     style: new Style({\r\n        //         image: new ol.style.Icon({\r\n        //             anchor: [0.5, 46],\r\n        //             anchorXUnits: 'fraction',\r\n        //             anchorYUnits: 'pixels',\r\n        //             src: 'https://openlayers.org/en/v4.6.4/examples/data/icon.png'\r\n        //         })\r\n        //     })\r\n        // });\r\n        //\r\n        //\r\n        // map.addOverlay(vectorLayer);\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this.updateDimensions)\r\n    }\r\n    render(){\r\n        const style_map = {\r\n            width: '100%',\r\n            height:this.state.height,\r\n            backgroundColor: '#cccccc'\r\n        }\r\n        const style_marker = {\r\n            width: \"20px\",\r\n            height: \"20px\",\r\n            border: \"1px solid #088\",\r\n            borderRadius: \"10px\",\r\n            backgroundColor: \"#0FF\",\r\n            opacity: \"0.5\"\r\n        }\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <div id=\"marker\" title=\"Marker\" style={{style_marker}} />\r\n                    <div id='map' style={style_map} />\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nexport default OLMapFragment",["88","89"],"C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\index.js",["90"],["91","92"],"C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\App.js",[],"C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Data.js",["93","94","95","96","97","98","99","100","101","102"],"C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\Nav.js",["103","104","105","106","107","108"],"C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OLMapFragment.jsx",["109","110","111","112"],"C:\\Users\\tatka_000\\Documents\\olm\\src\\main\\resources\\reactjs\\awsweather-frontend\\src\\components\\map\\OSM.jsx",["113","114","115","116"],{"ruleId":"117","severity":1,"message":"118","line":9,"column":9,"nodeType":"119","messageId":"120","endLine":9,"endColumn":15},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":9,"nodeType":"119","messageId":"120","endLine":4,"endColumn":15},{"ruleId":"117","severity":1,"message":"125","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":9,"column":6,"nodeType":"128","messageId":"129","endLine":11,"endColumn":7},{"ruleId":"130","severity":1,"message":"131","line":128,"column":41,"nodeType":"132","messageId":"133","endLine":128,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":9,"column":5,"nodeType":"128","messageId":"129","endLine":11,"endColumn":6},{"ruleId":"134","severity":1,"message":"135","line":17,"column":21,"nodeType":"136","endLine":17,"endColumn":58},{"ruleId":"134","severity":1,"message":"135","line":19,"column":25,"nodeType":"136","endLine":19,"endColumn":78},{"ruleId":"134","severity":1,"message":"135","line":22,"column":25,"nodeType":"136","endLine":22,"endColumn":71},{"ruleId":"134","severity":1,"message":"135","line":25,"column":25,"nodeType":"136","endLine":25,"endColumn":58},{"ruleId":"134","severity":1,"message":"135","line":28,"column":25,"nodeType":"136","endLine":28,"endColumn":80},{"ruleId":"117","severity":1,"message":"137","line":5,"column":37,"nodeType":"119","messageId":"120","endLine":5,"endColumn":41},{"ruleId":"117","severity":1,"message":"138","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":50,"column":27,"nodeType":"141","messageId":"142","endLine":50,"endColumn":61},{"ruleId":"130","severity":1,"message":"131","line":153,"column":40,"nodeType":"132","messageId":"133","endLine":153,"endColumn":42},{"ruleId":"117","severity":1,"message":"143","line":6,"column":20,"nodeType":"119","messageId":"120","endLine":6,"endColumn":32},{"ruleId":"117","severity":1,"message":"144","line":6,"column":41,"nodeType":"119","messageId":"120","endLine":6,"endColumn":50},{"ruleId":"117","severity":1,"message":"145","line":6,"column":81,"nodeType":"119","messageId":"120","endLine":6,"endColumn":94},{"ruleId":"117","severity":1,"message":"146","line":32,"column":13,"nodeType":"119","messageId":"120","endLine":32,"endColumn":16},{"ruleId":"121","replacedBy":"147"},{"ruleId":"123","replacedBy":"148"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":9,"nodeType":"119","messageId":"120","endLine":9,"endColumn":15},{"ruleId":"121","replacedBy":"149"},{"ruleId":"123","replacedBy":"150"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":9,"nodeType":"119","messageId":"120","endLine":4,"endColumn":15},{"ruleId":"117","severity":1,"message":"125","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":9,"column":6,"nodeType":"128","messageId":"129","endLine":11,"endColumn":7},{"ruleId":"130","severity":1,"message":"131","line":127,"column":45,"nodeType":"132","messageId":"133","endLine":127,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":130,"column":43,"nodeType":"132","messageId":"133","endLine":130,"endColumn":45},{"ruleId":"130","severity":1,"message":"131","line":133,"column":43,"nodeType":"132","messageId":"133","endLine":133,"endColumn":45},{"ruleId":"130","severity":1,"message":"131","line":136,"column":46,"nodeType":"132","messageId":"133","endLine":136,"endColumn":48},{"ruleId":"130","severity":1,"message":"131","line":140,"column":40,"nodeType":"132","messageId":"133","endLine":140,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":143,"column":40,"nodeType":"132","messageId":"133","endLine":143,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":196,"column":41,"nodeType":"132","messageId":"133","endLine":196,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":9,"column":5,"nodeType":"128","messageId":"129","endLine":11,"endColumn":6},{"ruleId":"134","severity":1,"message":"135","line":17,"column":21,"nodeType":"136","endLine":17,"endColumn":58},{"ruleId":"134","severity":1,"message":"135","line":19,"column":25,"nodeType":"136","endLine":19,"endColumn":78},{"ruleId":"134","severity":1,"message":"135","line":22,"column":25,"nodeType":"136","endLine":22,"endColumn":71},{"ruleId":"134","severity":1,"message":"135","line":25,"column":25,"nodeType":"136","endLine":25,"endColumn":58},{"ruleId":"134","severity":1,"message":"135","line":28,"column":25,"nodeType":"136","endLine":28,"endColumn":80},{"ruleId":"117","severity":1,"message":"143","line":6,"column":20,"nodeType":"119","messageId":"120","endLine":6,"endColumn":32},{"ruleId":"117","severity":1,"message":"144","line":6,"column":41,"nodeType":"119","messageId":"120","endLine":6,"endColumn":50},{"ruleId":"117","severity":1,"message":"145","line":6,"column":81,"nodeType":"119","messageId":"120","endLine":6,"endColumn":94},{"ruleId":"117","severity":1,"message":"146","line":32,"column":13,"nodeType":"119","messageId":"120","endLine":32,"endColumn":16},{"ruleId":"117","severity":1,"message":"137","line":5,"column":37,"nodeType":"119","messageId":"120","endLine":5,"endColumn":41},{"ruleId":"117","severity":1,"message":"138","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":50,"column":27,"nodeType":"141","messageId":"142","endLine":50,"endColumn":61},{"ruleId":"130","severity":1,"message":"131","line":153,"column":40,"nodeType":"132","messageId":"133","endLine":153,"endColumn":42},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'OLMapFragment' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Icon' is defined but never used.","'image' is defined but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'VectorSource' is defined but never used.","'OSMSource' is defined but never used.","'TileWMSSource' is defined but never used.","'map' is assigned a value but never used.",["151"],["152"],["151"],["152"],"no-global-assign","no-unsafe-negation"]